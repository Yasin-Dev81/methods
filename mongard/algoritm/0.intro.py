"""

- ساختار‌های داده
    * اصلی
        ~ integer
        ~ float
        ~ string
        ~ boolean
    * فرعی داخلی
        ~ list
        ~ tuple
        ~ dictionary
        ~ set
    * فرعی خارجی (user defined)
        ~ stack (پشته)
            + ساختارهای داده خطی
            + اصول ذخیره‌سازی
                $ First-In/Last-Out (FILO)
                $ Last-In/First-Out (LIFO)
            + افزودن یک عنصر جدید در یک انتها با حذف یک عنصر از همان انتها همراه است
        ~ queue (صف)
            + ساختارهای داده خطی
            + اصول ذخیره‌سازی
                $ First-In/First-Out (FILO)
            + موردی که اخیراً حداقل اضافه شده است ابتدا حذف می شود
        ~ tree (درخت)
            + ساختارهای داده غیرخطی
            + از گره هایی تشکیل شده اند که توسط 
            + edge 
            + ها به هم متصل شده اند
            + ویژگی های یک درخت این است که یک گره به عنوان گره ریشه تعیین می شود، به غیر از ریشه، هر گره دیگری یک گره والد مرتبط دارد، و هر گره می تواند تعداد دلخواه گره فرزند داشته باشد
        ~ linked list (لیست پیوندی)
            + ساختارهای داده خطی
            +  مجموعه‌ای از عناصر داده‌ای که از طریق پیوندها به یکدیگر متصل شده‌اند
            + هر عنصر داده در یک لیست پیوندی با استفاده از اشاره گر به دیگری متصل می شود

- الگوریتم
    * الگوریتم‌های پایتون مجموعه‌ای از دستورالعمل‌ها هستند که برای دستیابی به راه‌حل برای یک مسئله معین اجرا می‌شوند

- الگوریتم های پیمایش درختی
    *  فرآیند بازدید از تمام گره های یک درخت است که از گره ریشه شروع می شود
    * روش‌های پیمایش
        ~ پیمایش ترتیبی(In-order)
            $ شامل بازدید از زیر درخت در سمت چپ، و سپس زیردرخت سمت راست است
        ~ پیمایش پیش‌ سفارشی(pre-order)
            $  اولین موردی که بازدید می‌شود، گره ریشه و به دنبال آن زیردرخت سمت چپ و در نهایت، زیردرخت سمت راست است
        ~ الگوریتم پیمایش پس سفارشی(post-order)
            $ ابتدا از زیر درخت سمت چپ بازدید می شود، سپس از زیر درخت سمت راست بازدید می شود و گره ریشه آخرین بازدید می شود

- الگوریتم های مرتب سازی
    * روش‌هایی را برای چیدمان داده‌ها در یک قالب خاص
    * انواع آن
        ~ مرتب سازی حباب(bubble sort)
            $ مبتنی بر مقایسه است که در آن در صورت نادرست بودن ترتیب عناصر مجاور، به طور مکرر تعویض می شود
        ~ مرتب سازی ترکیب(merge sort)
            $ آرایه را به دو نیمه تقسیم می کند، آنها را مرتب می کند و سپس آنها را با هم ترکیب می کند
        ~ مرتب سازی درج(insertion sort)
            $ با مقایسه و مرتب سازی دو عنصر اول شروع می شود. سپس، عنصر سوم با دو عنصر طبقه بندی شده قبلی و غیره مقایسه می شود

- الگوریتم های جستجو
    * به بررسی و بازیابی یک عنصر از ساختارهای مختلف داده کمک می کنند
    * انواع آن
        ~ جستجوی خطی(linear search)
            $ هر آیتم به صورت متوالی یکی یکی جستجو می شود
        ~ جستجوی دودویی(binary search)
            $ فاصله جستجو بارها و بارها به نصف تقسیم می شود. اگر عنصری که باید جستجو شود کمتر از جزء مرکزی بازه باشد، فاصله به نیمه پایین‌تر کاهش می‌یابد. در غیر این صورت به نیمه بالایی باریک می شود. این فرآیند تا زمانی که مقدار مورد نظر پیدا شود تکرار می شود

"""